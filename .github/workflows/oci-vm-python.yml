name: Launch Free OCI VM

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Provision Free-Tier VM
    runs-on: ubuntu-latest

    steps:
    - name: 🧾 Checkout Code
      uses: actions/checkout@v3

    - name: 🛠 Install OCI CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip python3 python3-pip
        curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh > install.sh
        chmod +x install.sh
        ./install.sh --accept-all-defaults --install-dir $HOME/lib/oracle-cli --exec-dir $HOME/bin
        echo "$HOME/bin" >> $GITHUB_PATH

    - name: ⚙️ Configure OCI CLI
      run: |
        mkdir -p ~/.oci
        echo "${{ secrets.OCI_PRIVATE_KEY }}" > ~/.oci/oci_api_key.pem
        chmod 600 ~/.oci/oci_api_key.pem

        printf "[DEFAULT]\nuser=%s\nfingerprint=%s\nkey_file=%s\ntenancy=%s\nregion=%s\n" \
          "${{ secrets.OCI_USER_OCID }}" \
          "${{ secrets.OCI_FINGERPRINT }}" \
          "/home/runner/.oci/oci_api_key.pem" \
          "${{ secrets.OCI_TENANCY_OCID }}" \
          "${{ secrets.OCI_REGION }}" > ~/.oci/config

        chmod 600 ~/.oci/config
        echo "✅ OCI CLI Configured"
        oci --version

    - name: 🚀 Launch Free-Tier Ubuntu VM
      run: |
        export PATH="$HOME/bin:$PATH"
        echo "⏳ Launching free-tier VM..."

        AD="${{ secrets.OCI_AD }}"
        COMPARTMENT_ID="${{ secrets.OCI_COMPARTMENT_OCID }}"
        SUBNET_ID="${{ secrets.OCI_SUBNET_OCID }}"
        IMAGE_ID="ocid1.image.oc1.uk-london-1.aaaaaaaakubxn7vs64x6wx5mvq4npqwyeexiy46swxblv6gjgmquc7spas2q"  # Ubuntu 22.04

        ENCODED_KEY=$(echo "${{ secrets.OCI_SSH_PUBLIC_KEY }}" | tr -d '\n')

        INSTANCE_ID=$(oci compute instance launch \
          --availability-domain "$AD" \
          --compartment-id "$COMPARTMENT_ID" \
          --shape "VM.Standard.E2.1.Micro" \
          --display-name "gh-actions-freevm" \
          --subnet-id "$SUBNET_ID" \
          --image-id "$IMAGE_ID" \
          --assign-public-ip true \
          --metadata "{\"ssh_authorized_keys\":\"$ENCODED_KEY\"}" \
          --wait-for-state RUNNING \
          --query "data.id" \
          --raw-output)

        echo "✅ VM launched with ID: $INSTANCE_ID"
        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
