name: Launch Free OCI VM

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Provision Free VM and Run Python
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: 🔍 Print SSH Key Type (Safe Check)
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > temp_key.pem
        chmod 600 temp_key.pem
        ssh-keygen -l -f temp_key.pem

    - name: Install OCI CLI and Python
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip python3 python3-pip openssh-client
        curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh > install.sh
        chmod +x install.sh
        ./install.sh --accept-all-defaults <<< ''
        echo "$HOME/bin" >> $GITHUB_PATH

    - name: Configure OCI CLI
      run: |
        mkdir -p ~/.oci
        echo "${{ secrets.OCI_PRIVATE_KEY }}" > ~/.oci/oci_api_key.pem
        chmod 600 ~/.oci/oci_api_key.pem

        echo "[DEFAULT]" > ~/.oci/config
        echo "user=${{ secrets.OCI_USER_OCID }}" >> ~/.oci/config
        echo "fingerprint=${{ secrets.OCI_FINGERPRINT }}" >> ~/.oci/config
        echo "key_file=/home/runner/.oci/oci_api_key.pem" >> ~/.oci/config
        echo "tenancy=${{ secrets.OCI_TENANCY_OCID }}" >> ~/.oci/config
        echo "region=${{ secrets.OCI_REGION }}" >> ~/.oci/config

        chmod 600 ~/.oci/config
        echo "✅ OCI CLI configured"
        oci --version

    - name: Launch Free Tier Ubuntu VM
      id: launch_vm
      run: |
        echo "⏳ Launching free-tier VM..."
        AD=$(oci iam availability-domain list \
          --compartment-id ${{ secrets.OCI_COMPARTMENT_OCID }} \
          --query "data[0].name" --raw-output)

        IMAGE_ID="ocid1.image.oc1.uk-london-1.aaaaaaaarwb4xwofxsj74jytsoolzc6zqaxo4as4lg5jhl2cpzc6e5ooubpq"

        INSTANCE=$(oci compute instance launch \
          --availability-domain "$AD" \
          --compartment-id ${{ secrets.OCI_COMPARTMENT_OCID }} \
          --shape "VM.Standard.E2.1.Micro" \
          --display-name "github-actions-vm" \
          --subnet-id ${{ secrets.OCI_SUBNET_OCID }} \
          --image-id "$IMAGE_ID" \
          --assign-public-ip true \
          --metadata '{"ssh_authorized_keys":"${{ secrets.OCI_SSH_PUBLIC_KEY }}"}' \
          --wait-for-state RUNNING)

        INSTANCE_ID=$(echo "$INSTANCE" | jq -r '.data.id')
        PUBLIC_IP=$(oci compute instance list-vnics --instance-id "$INSTANCE_ID" \
                    --compartment-id ${{ secrets.OCI_COMPARTMENT_OCID }} \
                    --query "data[0].\"public-ip\"" --raw-output)

        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
        echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
        echo "🟢 VM Launched at IP: $PUBLIC_IP"

    - name: Wait for VM to be Ready
      run: sleep 90

    - name: Copy Python Script to VM
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
        chmod 600 id_rsa
        scp -o StrictHostKeyChecking=no -i id_rsa test_script.py ubuntu@$PUBLIC_IP:/home/ubuntu/

    - name: Run Python Script on VM
      run: |
        ssh -o StrictHostKeyChecking=no -i id_rsa ubuntu@$PUBLIC_IP "python3 /home/ubuntu/test_script.py"
