name: Launch Free OCI VM

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Provision Free VM Only
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install OCI CLI and Python
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip python3 python3-pip
        curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh > install.sh
        chmod +x install.sh
        ./install.sh --accept-all-defaults <<< ''
        echo "$HOME/bin" >> $GITHUB_PATH
        export PATH=$PATH:$HOME/bin

    - name: Configure OCI CLI
      run: |
        mkdir -p ~/.oci
        echo "${{ secrets.OCI_PRIVATE_KEY }}" > ~/.oci/oci_api_key.pem
        chmod 600 ~/.oci/oci_api_key.pem

        cat <<EOF > ~/.oci/config
        [DEFAULT]
        user=${{ secrets.OCI_USER_OCID }}
        fingerprint=${{ secrets.OCI_FINGERPRINT }}
        key_file=/home/runner/.oci/oci_api_key.pem
        tenancy=${{ secrets.OCI_TENANCY_OCID }}
        region=${{ secrets.OCI_REGION }}
        EOF

        chmod 600 ~/.oci/config
        echo "✅ OCI CLI configured"
        oci --version

    - name: Launch Free Tier Ubuntu VM
      run: |
        echo "⏳ Launching free-tier VM..."

        # Hardcoded AD and Image ID
        AD="${{ secrets.OCI_AD }}"
        IMAGE_ID="ocid1.image.oc1.uk-london-1.aaaaaaaakubxn7vs64x6wx5mvq4npqwyeexiy46swxblv6gjgmquc7spas2q"

        INSTANCE_ID=$(oci compute instance launch \
          --availability-domain "$AD" \
          --compartment-id ${{ secrets.OCI_COMPARTMENT_OCID }} \
          --shape "VM.Standard.E2.1.Micro" \
          --display-name "github-actions-vm" \
          --subnet-id ${{ secrets.OCI_SUBNET_OCID }} \
          --image-id "$IMAGE_ID" \
          --assign-public-ip true \
          --metadata '{"ssh_authorized_keys":"${{ secrets.OCI_SSH_PUBLIC_KEY }}"}' \
          --wait-for-state RUNNING \
          --query "data.id" \
          --raw-output)

        echo "✅ VM launched successfully."
        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
